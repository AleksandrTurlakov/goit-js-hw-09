{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CAIb,MAAMQ,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAEZA,EAAKK,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBACJ,MAAMC,EAAaP,SAASC,cAAc,mBACpCO,EAAYR,SAASC,cAAc,kBACnCQ,EAAcT,SAASC,cAAc,oBACrCS,EAAQC,OAAOJ,EAAWK,OAC1BC,EAAOF,OAAOH,EAAUI,OACxBE,EAASH,OAAOF,EAAYG,OAClCd,YAAWO,IACT,IAAK,IAAIU,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElC1B,EADiB0B,EAAI,EACGL,EAAQG,EAAOE,GACpCC,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAEhE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,G,IAGjEmB,GACHL,EAAIgB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconsole.log(form);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayInput = document.querySelector(`[name =\"delay\"]`);\n  const stepInput = document.querySelector(`[name =\"step\"]`);\n  const amountInput = document.querySelector(`[name =\"amount\"]`);\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  setTimeout(evt => {\n    for (let i = 0; i < amount; i += 1) {\n      const position = i + 1;\n      createPromise(position, delay + step * i)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }, delay);\n  evt.currentTarget.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$form","document","querySelector","console","log","addEventListener","evt","preventDefault","delayInput","stepInput","amountInput","delay1","Number","value","step","amount","i","then","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.b0626433.js.map"}